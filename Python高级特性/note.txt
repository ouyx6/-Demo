高阶函数：
	接受函数作为参数的函数
-----------------------------
def f(func）:
	pass
----------------------------
＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋

sorted	(对列表进行排序）
----------------------------
对字符串排序
>>> l = ['python', 'hello', 'linux', 'Git']
>>> sorted(l)
['Git', 'hello', 'linux', 'python']
对数字排序
>>> l = [1, 2, 4, -2, -3, -1]
>>> sorter(l)
>>> sorted(l)
[-3, -2, -1, 1, 2, 4]
－－－－－－－－－－－－－－－
	sorted的内置函数 abs 获取数字的绝对值 通过key在sorted中掉用 abs
－－－－－－－－－－－－－－－
>>> l
[1, 2, 4, -2, -3, -1]
>>> sorted(l, key = abs)
[1, -1, 2, -2, -3, 4]
－－－－－－－－－－－－－－－
>>> pp = [('Leborn James',98),('Kevin Durant',97),('James Harden',96),('Stephen Curry',95),('Anthony Davis',94)]
>>> sorted(pp, key = lambda x: x[0])
[('Anthony Davis', 94), ('James Harden', 96), ('Kevin Durant', 97), ('Leborn James', 98), ('Stephen Curry', 95)]
－－－－－－－－－－－－－－－
＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋＋

filter
－－－－－
filter(a, b)
a为函数， b为被处理的数据列表
a会对b中的每个元素进行判断，结果为真则保留，否则舍弃
－－－－－
	ininstance
－－－－－
 b = [9, 'python', True, 3.14, 2019, -4, abs]
>>> 
>>> def a(i):
...     if isinstance(i, int):
...             return True
...     else:
...             return False
>>> filter(a, b)
<filter object at 0x7fe33e19e358>
>>> list(filter(a,b))
[9, True, 2019, -4]
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
In [6]: pp
Out[6]: 
[('Leborn James', 98),
 ('Kevin Durant', 97),
 ('James Harden', 96),
 ('Stephen Curry', 95),
 ('Anthony Davis', 94)]
In [7]: def 过滤器(pp列表中的元组):
   ...:     if pp列表中的元组[1] >= 96:
   ...:         return True 
In [8]: list(filter(过滤器, pp))
Out[8]: [('Leborn James', 98), ('Kevin Durant', 97), ('James Harden', 96)]
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
filter（lambda x:x[1] >= 96 , pp)
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
map/reduce 
----------
map(a，b）
 其中 a是函数， 用来处理b参数
 b是可迭代对象
－－－－－－－－－－－－－
In [9]: b = [1, -1, 3, 4, 5, 6]
In [10]: def a(i):
    ...:     return i**2
    ...: 
In [11]: map(a,b)
Out[11]: <map at 0x7f5247f274e0> #返回一个map对象
In [12]: list(map(a,b))
Out[12]: [1, 1, 9, 16, 25, 36]
－－－－－－－－－－－－－－－－
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
reduce(a，b）
 其中 a是函数， 用来处理b参数
 b是可迭代对象
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝求和 实现于sum（）的结果
In [8]: pp
Out[8]: 
[('Leborn James', 98),
 ('Kevin Durant', 97),
 ('James Harden', 96),
 ('Stephen Curry', 95),
 ('Anthony Davis', 94)]
In [9]: list(map(lambda x:x[0].lower(), pp))
Out[9]: 
['leborn james',
 'kevin durant',
 'james harden',
 'stephen curry',
 'anthony davis']
－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
lambda






	


